{"name":"PDOStatement::bindParam的一个陷阱","tagline":"PHP","body":"本文地址: http://www.laruence.com/2012/10/16/2831.html\r\n\r\n废话不多说, 直接看代码:\r\n\r\n```\r\n<?php\r\n$dbh = new PDO('mysql:host=localhost;dbname=test', \"test\");\r\n$query = <<<QUERY\r\n  INSERT INTO `user` (`username`, `password`) VALUES (:username, :password);\r\nQUERY;\r\n$statement = $dbh->prepare($query);\r\n \r\n$bind_params = array(':username' => \"laruence\", ':password' => \"weibo\");\r\nforeach( $bind_params as $key => $value ){\r\n    $statement->bindParam($key, $value);\r\n}\r\n$statement->execute();\r\n```\r\n\r\n请问, 最终执行的SQL语句是什么, 上面的代码是否有什么问题?\r\n\r\nOkey, 我想大部分同学会认为, 最终执行的SQL是:\r\n\r\n```\r\nINSERT INTO `user` (`username`, `password`) VALUES (\"laruence\", \"weibo\");\r\n但是, 可惜的是, 你错了, 最终执行的SQL是:\r\n\r\nINSERT INTO `user` (`username`, `password`) VALUES (\"weibo\", \"weibo\");\r\n是不是很大的一个坑呢?\r\n```\r\n\r\n**—— 如果你想自己找到原因, 那么就不要继续往下读了———**\r\n\r\n这个问题, 来自今天的一个Bug报告: #63281\r\n\r\n究其原因, 也就是bindParam和bindValue的不同之处, bindParam要求第二个参数是一个引用变量(reference).\r\n\r\n让我们把上面的代码的foreach拆开, 也就是这个foreach:\r\n\r\n```\r\n<?php\r\nforeach( $bind_params as $key => $value ){\r\n    $statement->bindParam($key, $value);\r\n}\r\n```\r\n\r\n相当于:\r\n\r\n```\r\n<?php\r\n//第一次循环\r\n$value = $bind_params[\":username\"];\r\n$statement->bindParam(\":username\", &$value); //此时, :username是对$value变量的引用\r\n \r\n//第二次循环\r\n$value = $bind_params[\":password\"]; //oops! $value被覆盖成了:password的值\r\n$statement->bindParam(\":password\", &$value);\r\n所以, 在使用bindParam的时候, 尤其要注意和foreach联合使用的这个陷阱. 那么正确的作法呢?\r\n```\r\n\r\n1. 不要使用foreach, 而是手动赋值\r\n\r\n<?php\r\n$statement->bindParam(\":username\", $bind_params[\":username\"]); //$value是引用变量了\r\n$statement->bindParam(\":password\", $bind_params[\":password\"]);\r\n2. 使用bindValue代替bindParam, 或者直接在execute中传递整个参数数组.\r\n\r\n3. 使用foreach和reference(不推荐, 原因参看:微博)\r\n\r\n```\r\n<?php\r\nforeach( $bind_params as $key => &$value ) { //注意这里\r\n    $statement->bindParam($key, $value);\r\n}\r\n```\r\n\r\n最后, 展开了说, 对于要求参数是引用, 并且有滞后处理的函数, 都要在使用foreach的时候, 谨慎!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}